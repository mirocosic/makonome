name: iOS CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-15  # Use newer macOS version
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Set Default Scheme
      run: |
        scheme_list=$(xcodebuild -list -json | tr -d "\n")
        default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
        echo $default | cat >default
        echo Using default scheme: $default
    
    - name: Set Build Number
      run: |
        buildNumber=${{ github.run_number }}
        # Update CURRENT_PROJECT_VERSION in the project file
        sed -i '' "s/CURRENT_PROJECT_VERSION = [0-9]*/CURRENT_PROJECT_VERSION = $buildNumber/g" makonome.xcodeproj/project.pbxproj
        echo "Build number set to: $buildNumber"
    
    - name: Build
      env:
        scheme: ${{ 'default' }}
        platform: ${{ 'iOS Simulator' }}
      run: |
        # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
        device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
        if [ $scheme = default ]; then scheme=$(cat default); fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
    
    - name: Test
      env:
        scheme: ${{ 'default' }}
        platform: ${{ 'iOS Simulator' }}
      run: |
        # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
        device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
        if [ $scheme = default ]; then scheme=$(cat default); fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
    
    - name: Archive (Release builds only)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && vars.ENABLE_ARCHIVE == 'true'
      run: |
        mkdir -p build
        xcodebuild -project makonome.xcodeproj \
          -scheme makonome \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath $PWD/build/makonome.xcarchive \
          -allowProvisioningUpdates \
          archive
    
    # Uncomment when ready to deploy
    # - name: Export IPA
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: |
    #     xcodebuild -exportArchive \
    #       -archivePath $PWD/build/makonome.xcarchive \
    #       -exportPath $PWD/build \
    #       -exportOptionsPlist ExportOptions.plist
    
    # - name: Upload to TestFlight
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   env:
    #     APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
    #     APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
    #     APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
    #   run: |
    #     xcrun altool --upload-app -f build/makonome.ipa \
    #       --type ios \
    #       --apiKey $APP_STORE_CONNECT_API_KEY_ID \
    #       --apiIssuer $APP_STORE_CONNECT_API_ISSUER_ID